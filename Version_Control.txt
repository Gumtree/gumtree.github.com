Gumtree Module 4: Version Control
=================================

Introduction
------------

Version control refers to keeping a track of previous or parallel versions of your work.  Using version
control, you can step back to previous versions, or move sideways to alternative versions. For example,
you might have an experimental version of code on the instrument but want the users to stick with the
well-tested version. Version control allows you to switch between them in a few seconds.

A further benefit of version control is that it allows multiple people to work on
code without confusion.  Modern version control systems (VCSs) use a 'distributed' model, where everybody has a
complete copy of the entire history of the code, and the system allows smooth merging and a flow of
contributions among all of the authors.

In the Gumtree context, it is easy to imagine a number of authors: you at the beamline making a
quick bugfix; David working on your instrument code in his office; your laptop has another copy where
you are playing with a new approach.  Version control allows all this work to be recorded and ensures (a)
that nothing is lost, and (b) that the various contributions can be assimilated and combined as necessary.

Version control terminology
---------------------------

'Repository'
:    a folder (directory) with some or all content under version control (including sub-directories)
'Commit'
:    telling the version control system to store a snapshot of the current repository state
'Branch'
:    a line of development. All repositories will have at least one branch, often called 'master'
'Merge'
:    to take changes in one line of development and include them in another. Most often seen in
     the context of merging fixes into the master repository.
'Clone'
:    Make a copy of a repository

Gumtree's version control
-------------------------

Gumtree is maintained using the popular 'Git' version control system.  Git repositories can be manipulated 
from within Gumtree (which we cover here), via the
command line, or using GUI applications (e.g. [TortoiseGit][tortoise git] for Windows).  Among many
other things, Git is used to maintain the Linux kernel.  The canonical reference for git is ["Pro Git"][progit].


While distributed VCSs don't require a 'central' repository, for organisational purposes it can be handy. The
['central' repositories for Gumtree][github] are at the publically-accessible Github website, which can be cloned
at will.  Each of the subdirectories in the
Github Gumtree directory contains a repository for each instrument.  To clone to your laptop using Gumtree 
see the instructions in the appendix. 

[tortoise git]: http://code.google.com/p/tortoisegit 
[progit]: http://www.git-scm.com/book

Doing version control in Gumtree
--------------------------------

### Creating a new branch

A very worthwhile approach when working on code is to create a new branch for every feature that you add or
issue that you are dealing with.  So let's start by creating a new branch in our repositories: in the Git
Repository perspective, expand the tree.  Right-click on 'Branches' and follow the menu 'Switch To -> New Branch'.
Choose a branch name.  The defaults for this are suitable.  Click 'Finish'.  At 'Branches->Local' in the Git
Repositories tab (Left hand pane) you will see a new branch with your branch name on it. It will be ticked to
show that the source code in the working directory corresponds to this branch.  Double-clicking on another
branch name will change the working directory source code to that corresponding to the branch you clicked on. 
Of course, we haven't changed anything compared to the code that was downloaded, so there will be no obvious effect
yet.

### Changing code

Change code using whatever editor and filesystem tools you prefer to use.  For this example, I'm simply going to
move our `monitor_button.py` script to the working directory.  To commit this change, right-click on the top-level of
the repository browsing tree (i.e. first line at the top of the left-hand pane) and choose 'Commit'.  A dialog box will
open up giving you an opportunity to describe what you've done, and choose which files of those that have changed you
wish to include this time around.  After filling in the message and choosing the appropriate files, click 'Commit' and
you're done.  If you do nothing else, try and commit any changes you make at the beamline, on your own branch if you
prefer.

### Visualising what has been done

Right click on the top line of the repository browsing pane again and choose 'Show in -> History'.

 

Appendix: Downloading instrument scripts
----------------------------------------

All instrument scripts are kept in [publically-accessible repositories][github].  These repositories can be
copied to your local instrument using Gumtree as follows:

#. Open the 'Git Repository Exploring' perspective by clicking on the drop-down menu behind the little square
multi-pane window icon near the top right of your Gumtree window

#. Click on 'Clone a Git Repository'. If you already have a Git repository, this will be an icon at the top of
the left-hand pane, otherwise it will be plain text

#. In the Wizard that pops up, choose 'Github' as the repository source. Click 'Next'.

#. Search for \<animal\>\_scripts in the search bar at the top, or else type 'Gumtree/\<animal\>\_scripts' and press return,
where \<animal\> is your instrument animal.  If you do not yet have any scripts, feel free to search for scripts from a 
similar instrument instead.  If this step hangs, it is because the proxy required to get outside ANSTO has not been 
configured and so Gumtree cannot access the internet.  One quick way to get around this is to connect wirelessly to the 'eduroam'
network using your ANSTO credentials.

#. One of the search results should be 'Gumtree/\<animal\>\_scripts'. Select it and click 'Next'

#. Leave the default list of branches and click 'Next'

#. Choose a directory to hold the repository. This can be anywhere convenient for you and does not have to have any
relationship to where you installed Gumtree.  Leave everything else at defaults.

#. Click 'Finish'.  If you navigate using your favourite file system browsing tool to the directory from the previous step,
you will find all of your instrument scripts ready to be loaded.

#. In order to successfully run your scripts, you will have to add the directory that they are in 
to the `sys.path` variable:
`sys.path = ['/path/to/my/directory'] + sys.path`. This is because, while you can load the GUI script into the Gumtree GUI
successfully, when the script tries to `import` routines in subdirectories, it will not be able to find them unless the
path to them is available. 

[github]: https://github.com/Gumtree
